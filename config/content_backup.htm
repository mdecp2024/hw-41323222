<h1>About</h1>
<p>國立虎尾科技大學機械設計工程系</p>
<p>National Formosa University</p>
<p>Department of Mechanical Design Engineering</p>
<p>cp2024 計算機程式</p>
<p>課程教材:</p>
<p style="padding-left: 30px;"><a href="https://blog.jupyter.org/introducing-learn-python-with-jupyter-11214f152159">Learn Python with Jupyter</a> (<a href="https://www.learnpythonwithjupyter.com/">site</a>, <a href="https://localhost:9445/downloads/learn_python_with_jupyter.pdf">ebook</a>)</p>
<p style="padding-left: 30px;">教育版帳號 microsoftonline 登入點: <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a></p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入 <a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a> Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>fqpabi8</span></p>
<p>個人倉儲:<a href="https://github.com/mdecp2024/hw-nfugithub22232">https://github.com/mdecp2024/hw-nfugithub22232</a></p>
<p>個人網站:<a href="https://mdecp2024.github.io/hw-41323222">https://mdecp2024.github.io/hw-41323222</a></p>
<h3>References</h3>
<p></p>
<p>其他資訊:</p>
<p style="padding-left: 30px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 30px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<h1>Attendance</h1>
<p>出席 (10%) - 自行舉證評分</p>
<p>自行利用 Github commits 提交記錄評分.</p>
<h1>HW 1</h1>
<h4>主題: 基於瀏覽器的分散式版次管理與整合程式開發環境 (10%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">USB 隨身碟:</p>
<p style="padding-left: 60px;">下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (428 MB, 解開壓縮後約 1.5 GB)</p>
<p style="padding-left: 30px;"><a href="https://mde.tw/cp2024/content/Jupyter.html">Jupyter</a></p>
<p style="padding-left: 30px;">What are Github and Codespaces?</p>
<p style="padding-left: 60px;"><a href="https://docs.github.com/en/get-started/start-your-journey/hello-world">Hello World - GitHub Docs</a></p>
<p style="padding-left: 30px;">利用包含學號的字串作為帳號, 申請免費使用 Github.</p>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 1</p>
<hr/>
<p>PART 1: Creating the basics 資料整理 (10%)</p>
<p>啟動可攜程式系統後, 在命令列中:</p>
<p>y:\&gt;cd notebook</p>
<p>y:\notebook&gt;jupyter lab --collaborative</p>
<p>進入 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a> 練習如何修改 PART1 notebook 後存檔, 上傳至作業倉儲中的 downloads 目錄後, 透過 <a href="https://nbviewer.org/">https://nbviewer.org/</a> 將已經提交的 <a href="/downloads/01_string_input_print.ipynb">01_string_input_print.ipynb</a>, 嵌入下列網頁中.</p>
<p><iframe height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb" width="600"></iframe></p>
<p>上列 iframe 標註的 html 語法:</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;iframe width="600" height="400" src="https://nbviewer.org/urls/mde.tw/cp2024_hw/downloads/01_string_input_print.ipynb"&gt;&lt;/iframe&gt;</pre>
<p>完成上述流程整理後, 請將 HW1 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 1 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 Topic 1 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>w10</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/RjW3EY41tSU?si=hsQMR2TIwpqVEKAe" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/FWqZCDuaK_4?si=OTOuYTexy2BSWIFa" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/qVQogaNPBo4?si=Zl5fpL5eS2HysOxU" title="YouTube video player" width="560"></iframe></p>
<h3>w9</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/HUFZD6gV0sk?si=H6tei9L__A51xUXs" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h3>w11_hw</h3>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/iAR4s6CfAoY?si=NcWSx4tm0y0SD93g" title="YouTube video player" width="560"></iframe></p>
<p>1.  已知可以用 Python 程式<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/c2225ac22f32ee8485a630b42cf3f4d8567bb661/up_to_down_pyramid.py">由上往下列印三角形 *</a>, 或<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5e6eda7a004c15fa7262b9a80bfa4af6/raw/56793c72d4495d564e3cc6214ed5fb68dbd2b21d/left_to_right_pyramid.py">由左往右列印三角形 *</a>, 請將此程式延伸到可以在 10x10 的字元區域中, 以 "*" 字元列印出圓型區域. 完成後請將程式碼存入個人 Gist 後, 直接在個人作業網站中的 Brython 頁面中執行. (提示: ?src=gist_script_URL)</p>
<p>題目一答案:<a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/8cf4a8e76b0f010de19618c5e46ebad439389a0c/w11-2.py">circle</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def draw_filled_circle():
    size = 10
    center_x = 5
    center_y = 5
    radius = 4
    for y in range(size):
        for x in range(size):
            # 計算點(x, y)到圓心的距離的平方
            distance_squared = (x - center_x)**2 + (y - center_y)**2
            # 如果距離平方小於或等於半徑平方，則該點在圓內或圓上
            if distance_squared &lt;= radius**2:
                print("*", end="")
            else:
                print(" ", end="")
        print()  # 換行

draw_filled_circle()</pre>
<p><br/><br/></p>
<p></p>
<p>2. 已知可以在網頁中利用 Brython 繪製方格與塗色, 如下連結, 請設法修改此一程式, 直接將程式存入個人的 Gist, 並利用黑色方塊圍出一個圓形區域.<a href="https://mde.tw/cp2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/5705fc2a67aa1db0c0d44d6d0478b08b/raw/f95909804a1f134963cade8463eeb9bd32129ea8/grid_line_and_fill_in_Brython.py">網頁上的方格與塗色</a></p>
<p>題目二答案:<a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/eb4a677ac39dc6d54e1bb18fd4b3480b317520f3/w11_1.py">CIRCLE</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 利用 html 建立畫布超檔案物件
canvas = html.CANVAS(width=400, height=400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 每格的像素數
gs = 40  # 每格的像素數

# 取得畫布的上下文
ctx = canvas.getContext("2d")

# 繪製矩形
def dRect(lux, luy, w, h, s=1, c='#ff0000'):
    ctx.lineWidth = s
    ctx.strokeStyle = c
    ctx.beginPath()
    ctx.rect(lux, luy, w, h)
    ctx.stroke()

# 繪製網格
def grid(width, height, grid_pix):
    for i in range(width):
        for j in range(height):
            dRect(i * grid_pix, j * grid_pix, grid_pix, grid_pix, 1, "lightgrey")

# 填充顏色
def fill(x, y, color):
    ctx.fillStyle = color
    ctx.fillRect(x * gs, y * gs, gs, gs)

# 繪製圓形，判斷每個格子是否在圓形內
def draw_circle():
    center_x = 5  # 圓心 x
    center_y = 5  # 圓心 y
    radius = 4  # 圓的半徑

    # 繪製圓形
    for i in range(10):
        for j in range(10):
            # 計算每個格子的中心點
            cx = i + 0.5  # 格子中心的 x
            cy = j + 0.5  # 格子中心的 y
            distance_squared = (cx - center_x)**2 + (cy - center_y)**2
            
            # 如果這個格子在圓形內部或圓上
            if distance_squared &lt;= radius**2:
                fill(i, j, "black")  # 填充顏色為黑色

# 繪製網格與圓形
grid(10, 10, gs)
draw_circle()
</pre>
<p><br/><br/></p>
<p>3. 完成上列題目後, 請利用 Youtube 影片<span>簡報</span>個人的解題過程與心得.</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"></pre>
<p><br/><br/><br/></p>
<h3>w12_hw</h3>
<p><strong>第一題</strong> _Text, questions, and art - <em>Strings, input(), and print()</em> -</p>
<p>1-1 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/de2a4853d95212faaf29b339a2763b369343dccb/w12_1-1.py">answer</a></p>
<p>解釋 : <span style="color: #000000;"><code>input()</code></span><span> </span>就是讓程式能問你問題並得到你的答案</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">name = input("__name__：")
print("nice to meet you " + name)</pre>
<p>1-2 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/de2a4853d95212faaf29b339a2763b369343dccb/w12_1-2.py">answer</a></p>
<p>解釋 :<span style="color: #ff00ff; background-color: #ffffff;"> <span style="color: #000000;"><code>print()</code></span></span><span><span style="color: #ff0000; background-color: #ffffff;"> </span>就是讓程式將文字或數據顯示出來，讓你知道程式正在做什麼或顯示結果</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">print (" /\_/\   ")
print (" &gt;^.^&lt;   ")
print ("  / \    ")
print (" (___)___")</pre>
<p></p>
<p><strong>第二題</strong> _Events and favorites - <em>Variables and string concatenation</em> -</p>
<p>2-1 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/0daac297ee2be61d2027a26cc1baf55067f2a217/w12_2.py">answer</a></p>
<p>解釋 : <span>前兩句是寫出變數，後兩句是列印變數</span></p>
<p></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">first_name = "dududududu"
last_name  = "Max Verstappen"
print (first_name)
print (last_name)</pre>
<p>2-2 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/a70b2d06c349cf9e04decbb5b75cf7b7da0be87b/w12_2-2.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">name = input("What's your name?")
favorite_food = input ("What is your favorite food?")
print ("Hi! My name is " + name)
print ("My favorite food is " + favorite_food) 
print (name + "'s favorite food is " + favorite_food)</pre>
<p></p>
<p><strong>第三題 </strong>_ In a bookstore - <em>Lists and if... in... / else...</em> -</p>
<p>3 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/64fcb626a8a207742329c63370e35499951072f4/w12_3.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">programming_books = ["Learn python", "Python for all",  "Intro to python"]
print (programming_books)
wanted_book = input("Hi! What book would you like to buy?")
print (wanted_book)
if wanted_book in programming_books:
    print ("Yes, we sell it!")
else:
    print ("Sorry, we don't sell that book")</pre>
<p><strong>第四題</strong> _ Grocery shopping -<em> List methods: .append() and .remove()</em> -</p>
<p>4 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/b1b13dafa1655aa65a83538ac32002f1d191d137/w12_4.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">shopping_list = ["carrots", "chocolate", "olives"]
print (shopping_list)
new_item = input("What else do I have to buy?")
 
if new_item in shopping_list:
    print (new_item + " is/are already in the shopping list")
    print (shopping_list) 
else:
    shopping_list.append(new_item)
    print (shopping_list)
    item_to_remove = input("What do I have to remove?")
 
if item_to_remove in shopping_list:
    shopping_list.remove(item_to_remove)
    print (shopping_list)
else:
    print (item_to_remove + " is/are not in the list")
    print (shopping_list)</pre>
<p><strong>第五題</strong> _ Customizing the burger menu -<em> List methods: .index(), .pop(), and .insert()</em> -</p>
<p>5 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/af4da37b8ca4dab494184b68787b5ade7f191b5b/w12_5.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">todays_menu = ["burger", "salad", "coke"]
print(todays_menu)
side_dish_index = todays_menu.index("salad")
print (side_dish_index)
todays_menu.pop(side_dish_index)
print (todays_menu)
todays_menu.insert(side_dish_index, "fries")
print (todays_menu)</pre>
<p><strong>第六題</strong> _ Traveling around the world - <em>List slicing</em> -</p>
<p>6 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/60589f64b4bb39fb755927a5510f17415fdbe08b/w12_6.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">cities = ["San Diego", "Prague", "Cape Town", "Tokyo", "Melbourne"]
print (cities)
print (cities[1])
print (cities[1:4])
print (cities[1:4:2])
print (cities[0:3])
print (cities[:3])
print (cities[2:5])
print (cities[2:])
print (cities[0:5:2])
print (cities[::2])
print (cities[4])
print (cities[-1])
print (cities[-4:-1])
cities[3:0:-1]
cities[-2:-5:-1]
print (cities[::-1])</pre>
<p><strong>第七題</strong> _ Senses, planets, and a house - <em>Changing, adding, and removing list elements using slicing</em> -</p>
<p>7-1 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/f6baca8cbe729507faa3a1a4edb1c7ba15551bb2/w12_7-1.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">senses = ["eyes", "nose", "ears", "tongue", "skin"]
print (senses)
senses[1] = "smell"
print (senses)
senses[3:5] = ["taste", "touch"]
print (senses)
senses[0:3:2] = ["sight", "hearing"]
print (senses)</pre>
<p>7-2 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/f6baca8cbe729507faa3a1a4edb1c7ba15551bb2/w12_7-2.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">planets = ["Mercury", "Mars", "Earth", "Neptune"]
print (planets)
planets = planets + ["Jupiter"]
print (planets)
planets = planets[0:2] + ["Venus"] + planets[2:5]
print (planets)
planets = planets[:5] + ["Uranus", "Saturn"] + planets[5:]
print(planets)</pre>
<p>7-3 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/f6baca8cbe729507faa3a1a4edb1c7ba15551bb2/w12_7-3.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">house = ["kitchen", "dining room", "living room", "bedroom", "bathoom", "garden", "balcony", "terrace"]
print (house)
del house[1]
print (house)
del house[4:6]
print (house)
del house[::2]
print (house)
del house
print (house)</pre>
<p><strong>第八題</strong> _ My friends' favorite dishes - <em>for ... in range()</em> -</p>
<p>8 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/5a7e7a6692e796c629d4f757137488a67d0166da/w12_8.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">friends = ["Geetha", "Luca", "Daisy", "Juhan"]  
 
dishes  = ["sushi", "burgers", "tacos", "pizza"]  
 
print("My friends' names are:")  
print(friends)  
 
for index in range(0, 4):  
    print("index:  " + str(index))  
    print("friend: " + friends[index])  
 
print("Their favorite dishes are:")  
print(dishes)  
 
for index in range(0, 4):  
    print("index:  " + str(index))  
    print("dish: " + dishes[index])  
 
for index in range(0, 4):  
    print("My friend " + friends[index] + "'s favorite dish is " + dishes[index])</pre>
<p><strong>第九題</strong> _ At the zoo - <em>For loop with if... == ... / else -</em></p>
<p>9 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/c4eab48b2a2865208c354f0da143bb62ad06bec8/w12_9.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">animals = ["giraffe", "penguin", "dolphin"]
print (animals)
# for each position in the list
for i in range (0, len(animals)):
    print ("-- Beginning of loop --")
    # print each element and its position
    print ("The element in position " + str(i) + " is " + animals[i])
    wanted_to_see = "penguin"
    # for each position in the list
for i in range (0, len(animals)):
    # if the current animal is what you really wanted to see
    if animals[i] == wanted_to_see:
        # print out that that's the animal you really wanted to see
        print ("I saw a " + animals[i] + " and I really wanted to see it!")
    # if the current animal is not what you really wanted to see
    else:
        # just print out that you saw it
        print ("I saw a " + animals[i])</pre>
<p><strong>第十題</strong> _ Where are my gloves? - <em>For loop for searching</em> -</p>
<p>10 : <a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/1ef86b1d5b88fd02af6a7e203dd3556c6bdcb571/w12_10.py">answer</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">accessories = ["belt", "hat", "gloves", "sunglasses", "ring"]
print(accessories)
 
for i in range(len(accessories)):
    print(f"The element {accessories[i]} is in position {i}")
 
for i in range(len(accessories)):
    if len(accessories[i]) == 6:
        print(f"The element {accessories[i]} is in position {i} and it has 6 characters")
 
for i in range(len(accessories)):
    if len(accessories[i]) &lt; 6:
        print(f"The element {accessories[i]} is in position {i} and it has less than 6 characters")
 
n_of_characters = 6
for i in range(len(accessories)):
    if len(accessories[i]) &gt; n_of_characters:
        print(f"The element {accessories[i]} is in position {i} and it has more than {n_of_characters} characters")
 
for i in range(len(accessories)):
    if len(accessories[i]) != n_of_characters:
        print(f"The element {accessories[i]} is in position {i} and it has a number of characters different from {n_of_characters}")
 
position = 2
for i in range(len(accessories)):
    if i &lt;= position:
        print(f"The element {accessories[i]} is in position {i}, which is less than or equal to {position}")
 
for i in range(len(accessories)):
    if i &gt;= position:
        print(f"The element {accessories[i]} is in position {i}, which is at least {position}")</pre>
<p>心得 :</p>
<p></p>
<p></p>
<p></p>
<h3>w13_hw</h3>
<p>1.<a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/32d70555de133b4413b93c15a7f9c27d2eefe4b1/w13-1">交疊雙框</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 利用 html 建立 canvas 超文件物件
canvas = html.CANVAS(width = 400, height = 400)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 每一格的 pixel 數
gs = 200

# gs*tc = canvas width and height

ctx = canvas.getContext("2d")

width = 1
height = 1

for i in range(width):
    for j in range(height):
        #dRect(i*gs,j*gs,gs,gs,1,"lightgrey")
        ctx.lineWidth = 1
        ctx.strokeStyle = '#ff0000'
        ctx.beginPath();
        ctx.rect(i*gs,j*gs,gs,gs)
        ctx.stroke();

offset_x = 100
offset_y = 100

for i in range(width):
    for j in range(height):
        ctx.lineWidth = 1
        ctx.strokeStyle = '#ff0000'
        ctx.beginPath()
        ctx.rect(i * gs + offset_x, j * gs + offset_y, gs, gs)
        ctx.stroke()</pre>
<p><img alt="" height="400" src="/images/交疊雙框.png" width="400"/></p>
<p>2.<a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/91d55e963443c992f996a4f954a50c66c9a0e0cd/w13-2.py">外加兩外切圓</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 建立 canvas 元素
canvas = html.CANVAS(width=500, height=500)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 定義圓心和半徑
x1, y1 = 200, 200  # 第一個圓的圓心
x2, y2 = 300, 300  # 第二個圓的圓心
radius = 141.4  # 圓的半徑

ctx = canvas.getContext("2d")

# === 繪製第一個圓 ===
ctx.beginPath()
ctx.arc(x1, y1, radius, 0, 2 * 3.14159)
ctx.lineWidth = 2
ctx.strokeStyle = "black"
ctx.stroke()

# === 繪製第二個圓 ===
ctx.beginPath()
ctx.arc(x2, y2, radius, 0, 2 * 3.14159)
ctx.lineWidth = 2
ctx.strokeStyle = "black"
ctx.stroke()

# === 繪製正方形框架 ===
# 第一個正方形
ctx.lineWidth = 2
ctx.strokeStyle = "red"
ctx.beginPath()
ctx.rect(100, 100, 200, 200)
ctx.stroke()

# 第二個正方形
ctx.beginPath()
ctx.rect(200, 200, 200, 200)
ctx.stroke()</pre>
<p><img alt="" height="500" src="/images/外切圓.png" width="500"/></p>
<p>3.<a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/e0d5bb3171af918a11d7060a16f675b89c9c5714/w13-3.py">圖形上色</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import html
from browser import document as doc

# 建立 canvas 元素
canvas = html.CANVAS(width=500, height=500)
brython_div = doc["brython_div1"]
brython_div &lt;= canvas

# 定義圓心和半徑
x1, y1 = 200, 200  # 第一個圓的圓心
x2, y2 = 300, 300  # 第二個圓的圓心
radius = 141.4  # 外切圓半徑

ctx = canvas.getContext("2d")

# === 填充兩個圓的內容 ===
# 第一個圓填充黃色
ctx.beginPath()
ctx.arc(x1, y1, radius, 0, 2 * 3.14159)
ctx.fillStyle = "mistyrose"
ctx.fill()

# 第二個圓填充淺藍色
ctx.beginPath()
ctx.arc(x2, y2, radius, 0, 2 * 3.14159)
ctx.fillStyle = "lightblue"
ctx.fill()

# 填充方形交疊區域
ctx.beginPath()
ctx.rect(200, 200, 100, 100)
ctx.fillStyle = "orange"
ctx.fill()

# 填充第一個方形其他部分
ctx.beginPath()
ctx.rect(100, 100, 100, 100)
ctx.fillStyle = "blue"
ctx.fill()

ctx.beginPath()
ctx.rect(100, 200, 100, 100)
ctx.fillStyle = "darkblue"
ctx.fill()

ctx.beginPath()
ctx.rect(200, 100, 100, 100)
ctx.fillStyle = "aqua"
ctx.fill()

# 填充第二個方形其他部分
ctx.beginPath()
ctx.rect(300, 200, 100, 100)
ctx.fillStyle = "coral"
ctx.fill()

ctx.beginPath()
ctx.rect(200, 300, 100, 100)
ctx.fillStyle = "red"
ctx.fill()

ctx.beginPath()
ctx.rect(300, 300, 100, 100)
ctx.fillStyle = "darkorchid"
ctx.fill()

# === 繪製外切圓與紅色方框邊框 ===

# 繪製第一個外切圓
ctx.lineWidth = 2
ctx.strokeStyle = "black"
ctx.beginPath()
ctx.arc(x1, y1, radius, 0, 2 * 3.14159)
ctx.stroke()

# 繪製第二個外切圓
ctx.beginPath()
ctx.arc(x2, y2, radius, 0, 2 * 3.14159)
ctx.stroke()

# 繪製紅色方框邊框
ctx.strokeStyle = "white"

# 第一個紅色方形
ctx.beginPath()
ctx.rect(100, 100, 200, 200)
ctx.stroke()

# 第二個紅色方形
ctx.beginPath()
ctx.rect(200, 200, 200, 200)
ctx.stroke()</pre>
<p><img alt="" height="500" src="/images/上色2.0.png" width="500"/><br/><br/></p><h3>w14_hw</h3>
<h3>w15</h3>
<p><span>題目一: 請利用 Gist 與 Brython 程式環境, 在個人的課程網站中新增一個頁面, 標題為 w15, 以"從 1 累加到 100"作為 anchor 的連結標題, 使用者點擊該連結之後, 可從各自的 Brython 頁面執行程式.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/a9a4396ec2dd1310c56c40dc7afc96cdf7f37e82/1+100.py">從 1 累加到 100</a></p>
<p></p>
<p>題目二: 延伸上題, 設計一個函式 addto(1, 100), 可以完成上述的累加結果. (以"addto"作為連結標題)</p>
<p><a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/4fea871a41f7e4d63c143c533ae34be94407471c/addto.py">addto</a></p>
<p>題目三: 延伸上題, 設計一個函式 add_only_even(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加結果. 頁面中請以 <span>add_only_even 作為連結標題.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/4f237e024bfcc2f5d79509fb67696b4b4fe4884b/add_only_even.py">add_only_even</a></p>
<p><span>題目四: 延伸上題, 設計一個函式 add_avoid_8(1, 100), 可以完成從第一個輸入整數, 累加到第二個輸入變數的累加過程, 必須避開數字出現"8"的整數, 頁面中請以 add_avoid_8 作為連結標題.</span></p>
<p><a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/19f567319efeaaee1773df94ceb5f045d1797dd0/add_avoid_8.py">add_avoid_8</a></p><h1>HW 2</h1>
<h4>主題: Python 的數列、判斷式與重複迴圈 (20%)<span style="background-color: #ffff99;"><br/></span></h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 2 and Part 3</p>
<hr/>
<p>延續 HW 1 網頁資料整理與程式練習方法, 整理下列內容 (20%):</p>
<p>PART 2: Introduction to lists and if/else statements</p>
<p>PART 3: Introduction to the for loop</p>
<p>完成上述流程整理後, 請將 HW2 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 2 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 2 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>HW 3</h1>
<h4>主題: Python 的數字、演算法與迴圈 (20%)</h4>
<p style="padding-left: 30px;">Python 課程教材: <a href="https://www.learnpythonwithjupyter.com/">https://www.learnpythonwithjupyter.com/</a> - PART 4 and Part 5</p>
<p>完成上述流程整理後, 請將 HW3 自評分數輸入 cp2024 自評表單中.</p>
<p></p>
<h2>HW 3 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 3 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h3>W7</h3>
<pre>今天(10/9)的金字塔指令如下<br/><br/><a href="https://mdecp2024.github.io/hw-41323222/content/Brython.html?src=https://gist.githubusercontent.com/41323222/e74f12d6600ece66bee8885f8bba5dd6/raw/4a7a3582e38353bdc2ae54512c8ea8d602a8b474/w7.py">十層金字塔</a></pre>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 設定金字塔的高度
height = 10

# 迴圈生成金字塔
for i in range(height):
    # 每層的空格數量
    spaces = '　' * (height - i - 1)
    # 每層的星號數量
    stars = '＊' * (2 * i + 1)
    # 輸出每層
    print(spaces + stars)</pre>
<pre></pre><h3>W8</h3>
<p><img alt="" height="426" src="/images/螢幕擷取畫面 2024-10-16 121917.png" width="800"/>方塊...</p>
<div class="container">
<section><form onsubmit="return save_data(this)">
<div class="mce-tinymce mce-container mce-panel" hidefocus="1" id="mceu_24" role="application" tabindex="-1">
<div class="mce-container-body mce-stack-layout" id="mceu_24-body">
<div class="mce-statusbar mce-container mce-panel mce-stack-layout-item mce-last" hidefocus="1" id="mceu_46" role="group" tabindex="-1">
<div class="mce-container-body mce-flow-layout" id="mceu_46-body">
<div class="mce-path mce-flow-layout-item mce-first" id="mceu_47">
<div aria-level="0" class="mce-path-item mce-last" data-index="0" role="button" tabindex="-1">
<p>操作步驟:</p>
<ol>
<li>下載 <a href="http://229.cycu.org/python_2025_lite.7z">python_2025_lite.7z</a> (可攜程式環境)</li>
<li>下載<span> </span><a href="https://mde.tw/cp2024/downloads/zmq_remote_api_ex_cube_triangle.7z">zmq_remote_api_ex_cube_triangle.7z</a> (利用 Python 控制模擬場景中的物件)</li>
<li>進入可攜程式環境中 data/CoppeliaSim 目錄, 開啟 coppeliaSim.exe (機電整合模擬程式,<span> </span><a href="https://github.com/CoppeliaRobotics">原始碼</a>)</li>
<li>啟動可攜程式環境, 雙點擊 start_ipv6.bat, 系統會啟動四個命令列, 兩個 SciTE 編輯器</li>
<li>執行場景控制程式前, 先處理操作系統的防火牆, 將下列指令存為 .bat 檔案後, 以管理員身分執行, 以便開啟 23000-23050 埠號進出:</li>
<li>netsh advfirewall firewall add rule name="allow_23000-23050" dir=in action=allow protocol=TCP localport=23000-23050<br/>netsh advfirewall firewall add rule name="allow_23000-23050" dir=out action=allow protocol=TCP localport=23000-23050</li>
<li>開啟 CoppeliaSim 中的視覺串流伺服器: Modules - Connectivity - Visualization stream</li>
<li>利用 SciTE 開啟 put_cubes_into_scene_1.py, 利用 Tools - Go 執行操控程式</li>
<li>使用者可以透過瀏覽器, 以模擬場景所在電腦的 IP, 且埠號為 23020 觀看模擬場景</li>
</ol>
</div>
</div>
<br/>
<div class="mce-flow-layout-item mce-resizehandle mce-last" id="mceu_48"><i class="mce-ico mce-i-resize"></i></div>
</div>
</div>
</div>
</div>
<input onclick="ssave()" type="button" value="save"/><input onclick="cssave()" type="button" value="csave"/><span> </span><input onclick="location.href='/get_page/W8'" type="button" value="viewpage"/></form></section>
</div>
<div aria-describedby="mceu_68-none" aria-labelledby="mceu_68" class="mce-contextmenu mce-container mce-panel mce-floatpanel mce-menu mce-menu-has-icons mce-menu-align" hidefocus="1" id="mceu_68" role="application" tabindex="-1">
<div class="mce-container-body mce-stack-layout" id="mceu_68-body" role="menu">
<div class="mce-menu-item mce-menu-item-normal mce-stack-layout-item mce-first" id="mceu_69" role="menuitem" tabindex="-1"></div>
</div>
</div><h1>HW 4</h1>
<h4>主題: 利用 Python 控制機電模擬系統 (20%)</h4>
<p style="padding-left: 30px;">利用 <a href="https://solvespace.com/">https://solvespace.com/</a> 建立機械系統零組件</p>
<p style="padding-left: 30px;">利用 <a href="https://www.coppeliarobotics.com/">CoppeliaSim</a> 建立機電模擬系統</p>
<p style="padding-left: 30px;">利用 <a href="https://manual.coppeliarobotics.com/en/zmqRemoteApiOverview.htm">Python</a> 跨網路控制瀏覽器上的機電模擬系統</p>
<p style="padding-left: 30px;">範例:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2023_pj3ag4_zmq_football_4.7.7z">cd2023_pj3ag4_zmq_football_4.7.7z</a></p>
<p style="padding-left: 60px;"><a href="https://localhost:9446/downloads/cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z">cd2024_2b_g6_steel_ball_platform_nxopen_copsim.7z</a></p>
<p>完成上述流程整理後, 請將 HW4 自評分數輸入 cp2024 自評表單中.</p>
<h2>HW 4 Exam</h2>
<p>每六人為一組進行協同程式練習</p>
<p>透過 Jupyterlab 協同網頁, 輪流指定各組編寫 HW 4 相關的程式練習, 以及網頁內容 (localhost 與 Codespaces 環境)編輯.</p>
<h1>Final Report</h1>
<p>期末口頭與書面專題報告 (20%)</p>
<p>期末口頭專題報告影片:</p>
<p style="padding-left: 30px;">......</p>
<p>期末書面專題報告檔案 (pdf):</p>
<p style="padding-left: 30px;">......</p>
<p>電腦輔助設計與實習課程總結心得:</p>
<p style="padding-left: 30px;">......</p>
<p>期末報告自評成績:</p>
<p style="padding-left: 30px;">完成上述流程後, 請將 Final Report 自評分數輸入 cp2024 自評表單中.</p>
<h1>Brython</h1>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>